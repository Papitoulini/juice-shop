name: "My CI/CD Pipeline"
on:
  push:
    branches-ignore:
      - l10n_develop
      - gh-pages
    paths-ignore:
      - "*.md"
      - "LICENSE"
      - "monitoring/grafana-dashboard.json"
      - "screenshots/**"
    tags-ignore:
      - "*"
env:
  ANGULAR_CLI_VERSION: 15
  CYCLONEDX_NPM_VERSION: "^1.12.0"
  # PORT: 3001
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v2

      #     #   - name: ‚éî Setup node
      #     #     uses: actions/setup-node@v2
      #     #     with:
      #     #       node-version: 18

      - name: Install CLI tools
        run: npm install -g @angular/cli@$ANGULAR_CLI_VERSION

      - name: üì• Download deps
        run: npm install && echo "npm install finished successfully"

      - name: üß™ Run unit test script
        uses: nick-invision/retry@943e742917ac94714d2f408a0e8320f2d1fcafcd #v2.8.3
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: npm test

      - name: üß™ Run server test script
        uses: nick-invision/retry@943e742917ac94714d2f408a0e8320f2d1fcafcd #v2.8.3
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: npm run test:server

      - name: üß™ Run api test script
        uses: nick-invision/retry@943e742917ac94714d2f408a0e8320f2d1fcafcd #v2.8.3
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: npm run test:api

      - name: üß™ Run chromiium test script
        uses: nick-invision/retry@943e742917ac94714d2f408a0e8320f2d1fcafcd #v2.8.3
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: npm run test:chromium
  deploy:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: ssh and deploy to machine
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REVAMP_SERVER_SSH_HOST }}
          username: ${{ secrets.REVAMP_SERVER_SSH_USERNAME }}
          password: ${{ secrets.REVAMP_SERVER_SSH_PASSWORD }}
          command_timeout: 30m
          port: ${{ secrets.REVAMP_SERVER_SSH_PORT }}
          script: |
            cd ~/juice-shop-hms
            git pull
            docker stop $(docker ps -a -q)
            echo "Stopped all running containers"
            docker container prune
            echo "Removed all containers"
            docker rmi $(docker images --filter "dangling=true" -q --no-trunc)
            echo "Removed all dangling images"
            docker build -t foo .
            echo "Successfully built docker image!"
            docker run -d -p 83.212.109.249:3001:3000 foo:latest
            echo "Successfully deployed!"
  zap:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          target: ${{ secrets.REVAMP_SERVER_APP_IP }}
          cmd_options: "-a -j"
      - name: Download Report Artifact
        uses: actions/download-artifact@v4
      - name: Display structure of downloaded files
        run: ls -R
  label_issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - run: echo gh version
          echo ${{ github.repository }}
          echo Issue number ${{ github.event.issue.number }}
          gh issue edit "$NUMBER" --add-label "$LABELS"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          LABELS: llm
  issue_commented:
    # This job only runs for issue comments
    name: Issue comment
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo Assigned issue $NUMBER to LLMs
        env:
          NUMBER: ${{ github.event.issue.number }}
